{
  "id": "guide/component",
  "title": "@ngrx/component",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/component/index.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"ngrxcomponent\">@ngrx/component<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component#ngrxcomponent\"><i class=\"material-icons\">link</i></a></h1>\n<p>Reactive Component/Decorator library for Angular applications.</p>\n<p>Included are decorators and directives that support a fully reactive state in Angular Components.  </p>\n<h2 id=\"introduction\">Introduction<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component#introduction\"><i class=\"material-icons\">link</i></a></h2>\n<p>Parts of Angular like the <code>ReactiveFormsModule</code>, <code>RouterModule</code>, <code>HttpClientModule</code>, etc. are already reactive.\nFor those who prefer imperative code, it's a little effort to restrict it to a single subscription.</p>\n<p>On the other hand for those who prefer reactive code, it's not that easy.\nA lot of conveniences are missing, and beside the <code>async</code> pipe there is pretty much nothing to take away the manual mapping to observables.<br>\nFurthermore, an increasing number of packages start to be fully observable based. A very popular and widely used example is <a href=\"https://ngrx.io/\">NgRx</a>. It enables us to maintain global push-based state management based on observables.\nAlso, other well-known libraries, <a href=\"https://material.angular.io/\">Angular material</a> provide a reactive way of usage.</p>\n<p>This creates even more interest and for so-called <code>reactive primitives</code> for the Angular framework, like the <code>async</code> and other template syntax, decorators and services.</p>\n<p>This library provides a set of primitives making it more convenient to work in a reactive architecture.</p>\n<h2 id=\"installation\">Installation<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component#installation\"><i class=\"material-icons\">link</i></a></h2>\n<p>Detailed installation instructions can be found on the <a href=\"guide/component/install\">Installation</a> page.</p>\n<h2 id=\"included\">Included<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component#included\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li><a href=\"guide/component/push\">Push Pipe</a></li>\n<li><a href=\"guide/component/let\">Let Structural Directive</a></li>\n</ul>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - guide/component#included\n - guide/component#installation\n - guide/component#introduction\n - guide/component#ngrxcomponent\n - guide/component/install\n - guide/component/let\n - guide/component/push\n - https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/component/index.md?message=docs%3A%20describe%20your%20change...\n - https://material.angular.io/\n - https://ngrx.io/\n-->"
}